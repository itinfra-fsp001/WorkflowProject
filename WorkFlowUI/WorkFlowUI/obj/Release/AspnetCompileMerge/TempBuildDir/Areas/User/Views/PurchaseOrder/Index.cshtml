@model IEnumerable<BOL.tbl_PurchaseOrder>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Approved Purchase Order</h2>
@if (TempData["Msg"] != null)
{
    <h3> @TempData["Msg"].ToString()</h3>
}
<style type="text/css">
    .customleftsize {
        width: 130px !important;
    }
</style>

<script src="~/scripts/jquery-1.10.2.min.js"></script>
<script>
    $(document).ready(function () {
        $('#btnSearch').click(function () {
            //   debugger;
            this.href = this.href.replace("SearchData", checkandreplace($("#txtSearch").val()));
            this.href = this.href.replace("VendorNameValue", checkandreplace($("#txtVendorName").val()));
            this.href = this.href.replace("BuyerNameValue", checkandreplace($("#txtBuyerName").val()));
        });
    })
    function ConfirmIssue() {

        return confirm('Are you sure, yow want to IssuePO without sending email?');
    }

    function ConfirmCancel() {

        return confirm('Are you sure, yow want to Cancel Approved PO?');
    }

</script>
@if (TempData["alert"] != null)
{
    <script>alert('PR Requestor Email Id is not available.')</script>
}
<div class="row">
    <div class="col-sm-12">
        <ul class="nav nav-pills col-lg-8">
            @if (ViewBag.IsPOIssued == 0)
            {
                <li class="active">@Html.ActionLink("Pending", "Index", new { IsPOIssued = 0, Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])), BuyerName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["BuyerName"])), VendorName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["VendorName"])) })</li>
            }
            else
            {
                <li> @Html.ActionLink("Pending", "Index", new { IsPOIssued = 0, Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])), BuyerName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["BuyerName"])), VendorName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["VendorName"])) })</li>
            }
            @if (ViewBag.IsPOIssued == 1)
            {
                <li class="active">@Html.ActionLink("Issued", "Index", new { IsPOIssued = 1, Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])), BuyerName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["BuyerName"])), VendorName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["VendorName"])) })</li>
            }
            else
            {
                <li> @Html.ActionLink("Issued", "Index", new { IsPOIssued = 1, Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])), BuyerName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["BuyerName"])), VendorName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["VendorName"])) })</li>
            }
        </ul>
    </div>
</div>

<div class="row empty-row">
    <div class="col-sm-12">
    </div>
</div>

<div>
    <div class="row" style="margin-bottom:10px">
        <div class="col-sm-2 customleftsize">
            Document No.
        </div>
        <div class="col-sm-8">
            @Html.TextBox("txtSearch", Convert.ToString(ViewData["Search"]))
            &nbsp;&nbsp;&nbsp;

        </div>
    </div>
    <div class="row" style="margin-bottom:10px">
        <div class="col-sm-2 customleftsize">
            Vendor Name
        </div>
        <div class="col-sm-8">
            @Html.TextBox("txtVendorName", Convert.ToString(ViewData["VendorName"]))

        </div>
    </div>
    <div class="row" style="margin-bottom:10px">
        <div class="col-sm-2 customleftsize">
            Buyer Name
        </div>
        <div class="col-sm-8">
            @Html.TextBox("txtBuyerName", Convert.ToString(ViewData["BuyerName"]))

        </div>
    </div>
    <div class="row" style="margin-bottom:10px">
        <div class="col-sm-2 customleftsize">

        </div>
        <div class="col-sm-4">

            <p class="form-control" style="border:0px">
                @Html.ActionLink("Search", "Index", new
           {
               Status = ViewBag.Status,
               SortOrder = (ViewBag.SortOrder == null ? "Asc" :
         (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")),
               Sortby = "PoType",
               page = (ViewBag.Page == null ? "1" : ViewBag.Page),
               Search = "SearchData",
               IsPOIssued = ViewBag.IsPOIssued,
               VendorName = "VendorNameValue",
               BuyerName = "BuyerNameValue"
           }, new { id = "btnSearch" })
            </p>
        </div>
    </div>
</div>




<table class="table table-striped table-bordered table-hover">
    <tr class="info">

        <th>
            @*@Html.DisplayNameFor(model => model.POType)*@
            @Html.ActionLink("POType", "Index", new { IsPOIssued = ViewBag.IsPOIssued, SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), Sortby = "POType", page = (ViewBag.Page == null ? "1" : ViewBag.Page), Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])), BuyerName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["BuyerName"])), VendorName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["VendorName"])) })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.PurchaseOrderNo)*@
            @Html.ActionLink("PurchaseOrderNo", "Index", new { IsPOIssued = ViewBag.IsPOIssued, SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), Sortby = "PurchaseOrderNo", page = (ViewBag.Page == null ? "1" : ViewBag.Page), Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])), BuyerName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["BuyerName"])), VendorName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["VendorName"])) })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.NetPrice)*@
            @Html.ActionLink("NetPrice", "Index", new { IsPOIssued = ViewBag.IsPOIssued, SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), Sortby = "DocNetPrice", page = (ViewBag.Page == null ? "1" : ViewBag.Page), Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])), BuyerName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["BuyerName"])), VendorName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["VendorName"])) })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Currency)*@
            @Html.ActionLink("Currency", "Index", new { IsPOIssued = ViewBag.IsPOIssued, SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), Sortby = "Currency", page = (ViewBag.Page == null ? "1" : ViewBag.Page), Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])), BuyerName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["BuyerName"])), VendorName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["VendorName"])) })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.NetPrice)*@
            @Html.ActionLink("NetPriceLocal", "Index", new { IsPOIssued = ViewBag.IsPOIssued, SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), Sortby = "NetPrice", page = (ViewBag.Page == null ? "1" : ViewBag.Page), Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])), BuyerName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["BuyerName"])), VendorName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["VendorName"])) })
        </th>
        @*<th>

                @Html.ActionLink("POStatus", "Index", new { IsPOIssued = ViewBag.IsPOIssued, SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), Sortby = "POStatus", page = (ViewBag.Page == null ? "1" : ViewBag.Page), Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])),BuyerName=Convert.ToString(ViewData["BuyerName"]),VendorName=Convert.ToString(ViewData["VendorName"]) })
            </th>*@
        <th>
            @*@Html.DisplayNameFor(model => model.Organization)*@
            @Html.ActionLink("Organization", "Index", new { IsPOIssued = ViewBag.IsPOIssued, SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), Sortby = "Organization", page = (ViewBag.Page == null ? "1" : ViewBag.Page), Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])), BuyerName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["BuyerName"])), VendorName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["VendorName"])) })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Warehouse)*@
            @Html.ActionLink("Warehouse", "Index", new { IsPOIssued = ViewBag.IsPOIssued, SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), Sortby = "Warehouse", page = (ViewBag.Page == null ? "1" : ViewBag.Page), Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])), BuyerName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["BuyerName"])), VendorName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["VendorName"])) })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.VendorCode)*@
            @Html.ActionLink("VendorCode", "Index", new { IsPOIssued = ViewBag.IsPOIssued, SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), Sortby = "VendorCode", page = (ViewBag.Page == null ? "1" : ViewBag.Page), Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])), BuyerName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["BuyerName"])), VendorName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["VendorName"])) })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.VendorName)*@
            @Html.ActionLink("VendorName", "Index", new { IsPOIssued = ViewBag.IsPOIssued, SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), Sortby = "VendorName", page = (ViewBag.Page == null ? "1" : ViewBag.Page), Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])), BuyerName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["BuyerName"])), VendorName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["VendorName"])) })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Vendoremail)*@
            @Html.ActionLink("Vendoremail", "Index", new { IsPOIssued = ViewBag.IsPOIssued, SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), Sortby = "Vendoremail", page = (ViewBag.Page == null ? "1" : ViewBag.Page), Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])), BuyerName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["BuyerName"])), VendorName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["VendorName"])) })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.BuyerCode)*@
            @Html.ActionLink("BuyerCode", "Index", new { IsPOIssued = ViewBag.IsPOIssued, SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), Sortby = "BuyerCode", page = (ViewBag.Page == null ? "1" : ViewBag.Page), Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])), BuyerName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["BuyerName"])), VendorName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["VendorName"])) })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.BuyerName)*@
            @Html.ActionLink("BuyerName", "Index", new { IsPOIssued = ViewBag.IsPOIssued, SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), Sortby = "BuyerName", page = (ViewBag.Page == null ? "1" : ViewBag.Page), Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])), BuyerName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["BuyerName"])), VendorName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["VendorName"])) })
        </th>

        @if (ViewBag.IsPOIssued == 0)
            {
            <th> Action</th>
        }
        @*<th>
                @Html.DisplayNameFor(model => model.IsPOIssued)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.POIssuedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.POIssuedDate)
            </th>*@

    </tr>

    @foreach (var item in Model)
            {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.POType)
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.PurchaseOrderNo)*@
                @Html.ActionLink(@item.PurchaseOrderNo, "RouteDocNo", new { docId = @item.DocID, docNo = @item.PurchaseOrderNo, type = @item.POType, IsPOIssued = ViewBag.IsPOIssued, Page = ViewBag.Page })
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.DocNetPrice)*@
                @if (item.DocNetPrice != null)
                {
                    var netprice = Convert.ToDecimal(item.DocNetPrice.Value).ToString("#,##0.00");
                    @Html.DisplayFor(m => netprice)
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Currency)
            </td>

            <td>
                @*@Html.DisplayFor(modelItem => item.NetPrice)*@
                @if (item.NetPrice != null)
                {
                    var netprice = Convert.ToDecimal(item.NetPrice.Value).ToString("#,##0.00");
                    @Html.DisplayFor(m => netprice)
                }
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.POStatus)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Organization)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Warehouse)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VendorCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VendorName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Vendoremail)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BuyerCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BuyerName)
            </td>

            @if (ViewBag.IsPOIssued == 0)
            {
                <td>

                    @Html.ActionLink("IssuePO", "Index", "IssuePo", new { id = item.DocID }, new { target = "_parent" })
                    |     @Html.ActionLink("Exception", "IssueWithOutMail", new { id = item.DocID, IsPOIssued = ViewBag.IsPOIssued, SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), Sortby = "BuyerName", page = (ViewBag.Page == null ? "1" : ViewBag.Page), Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])) }, new { onclick = "return ConfirmIssue()" })
                    | @Html.ActionLink("Cancel", "CancelDocument", new { id = item.DocID, IsPOIssued = ViewBag.IsPOIssued, SortOrder = (ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc")), Sortby = "BuyerName", page = (ViewBag.Page == null ? "1" : ViewBag.Page), Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])) }, new { onclick = "return ConfirmCancel()" })

                </td>
            }
            @*<td>
                    @Html.DisplayFor(modelItem => item.IsPOIssued)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.POIssuedBy)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.POIssuedDate)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id=item.DocID }) |
                    @Html.ActionLink("Details", "Details", new { id=item.DocID }) |
                    @Html.ActionLink("Delete", "Delete", new { id=item.DocID })
                </td>*@
        </tr>
    }

</table>
@{
    double TotalPage = Convert.ToDouble(@ViewBag.TotalPages);

}



<ul class="pagination">
    @for (int i = 1; i <= TotalPage; i++)

            {
                if (i == ViewBag.Page)
                {
            <li class="active"> @Html.ActionLink(i.ToString() + " ", "Index", new { IsPOIssued = ViewBag.IsPOIssued, SortOrder = (ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder), Sortby = (ViewBag.Sortby == null ? "BuyerName" : ViewBag.Sortby), Page = i, Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])), BuyerName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["BuyerName"])), VendorName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["VendorName"])) })</li>


        }
        else
        {

            <li> @Html.ActionLink(i.ToString() + " ", "Index", new { IsPOIssued = ViewBag.IsPOIssued, SortOrder = (ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder), Sortby = (ViewBag.Sortby == null ? "BuyerName" : ViewBag.Sortby), Page = i, Search = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["Search"])), BuyerName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["BuyerName"])), VendorName = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["VendorName"])) }) </li>
        }
    }

</ul>

