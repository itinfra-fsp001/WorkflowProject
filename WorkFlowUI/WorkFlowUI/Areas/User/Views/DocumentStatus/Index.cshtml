@model WorkFlowUI.ViewModel.DocStatusViewModal

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css">
    .empty-row {
        height: 15px !important;
    }

    .statusSpan {
        color: #e95420;
    }
    .infodiv
    {
        background-color: lightyellow;
            padding: 5px;
            text-align: center;
            border: 1px solid gray;
            border-radius: 5px;
            font-size: 15px;
    }
</style>
<script src="~/scripts/jquery-1.10.2.min.js"></script>
<script>
    $(document).ready(function () {
        $('#btnSearch').click(function () {
            //   debugger;
            if ($("#txtSearchText").val() != "") {
                this.href = this.href.replace("SearchData", checkandreplace($("#txtSearchText").val()));
            }
            else {
                alert("Please enter Doc No. / RFQ No.");
                return false;
            }

        });

        $("#ddlPagesize").change(function () {
            var pageCount = $("#ddlPagesize option:selected").val();
            var urlLocation = "@Url.Action("Index", "DocumentStatus", new { Page = (ViewBag.Page == null ? "1" : ViewBag.Page), SearchText = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["SearchText"])),Pagesize= "PagesizeValue" })";
            urlLocation = urlLocation.replace("PagesizeValue", pageCount);
            urlLocation = urlLocation.replace(/&amp;/g, "&");
            window.location.href = urlLocation;
        });
    });
</script>
<h2>Search Document</h2>
<div class="row empty-row">
    <div class="col-sm-12">
    </div>
</div>
<div class="row" style="margin-bottom:5px">
    <div class="col-sm-2">
        Doc No. / RFQ No.
    </div>
    <div class="col-sm-8">
        @Html.TextBoxFor(Model => Model.searchText, new { id = "txtSearchText", style = "width:90%" })<br />

    </div>
</div>
<div class="row">
    <div class="col-sm-2">
    </div>
    <div class="col-sm-8">
        @Html.ActionLink("Search", "Index", new { SearchText = "SearchData",Page=Convert.ToString(ViewData["Page"]), Pagesize = Convert.ToString(ViewData["PageSize"]) }, new { id = "btnSearch" })
    </div>
</div>
<div class="row empty-row">
    <div class="col-sm-12">
    </div>
</div>
@if (Model.docList != null)
{
    <div class="row">
        <div class="col-sm-5">
            @{
                List<SelectListItem> listItems = new List<SelectListItem>();
                listItems.Add(new SelectListItem
                {
                    Text = "500",
                    Value = "500"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "250",
                    Value = "250",
                });
                listItems.Add(new SelectListItem
                {
                    Text = "100",
                    Value = "100",
                });
                listItems.Add(new SelectListItem
                {
                    Text = "50",
                    Value = "50",
                    Selected = true
                });
                @Html.DropDownList("ddlPagesize", listItems)
                <script type="text/javascript">
                    $(document).ready(function () {
                        $("#ddlPagesize option[value='" + @Convert.ToString(ViewData["Pagesize"]) +"']").attr("selected", "selected");
                    });
                </script>
            }
        </div>
        <div class="col-sm-7 infodiv">
            Last two years records displaying here
        </div>
    </div>

    <div class="row empty-row">
        <div class="col-sm-12">
        </div>
    </div>

    <table class="table table-striped table-bordered table-hover ">
        <tr class="info">
            <th>
                Doc. Type
            </th>
            <th>
                Doc. No
            </th>
            <th>
                Net Price
            </th>
            <th>
                Currency
            </th>
            <th>
                Net Price Local
            </th>
            <th>
                Status
            </th>
            <th>
                Vendor Code
            </th>
            <th>
                Vendor Name
            </th>
            <th>
                Vendor Category
            </th>
            <th>Attach Doc1</th>
            <th>Attach Doc2</th>
            <th>Attach Doc3</th>
            <th>Attach Doc4</th>
            <th>Released By</th>
            <th>
                Released Date
            </th>

        </tr>


        @foreach (var item in Model.docList)
        {
            <tr style="@(item.PriorityCode == 1 ? "Background-color:aqua" : "")">
                <td>
                    @Html.DisplayFor(modelItem => item.DocType)
                </td>
                <td>
                    @Html.ActionLink(@item.DocNo, "RouteDocNo", new { docId = @item.DocID, docNo = @item.DocNo, type = @item.DocType })
                </td>
                <td>
                    @if (item.DocNetPrice != null)
                    {
                        var netprice = Convert.ToDecimal(item.DocNetPrice.Value).ToString("#,##0.00");
                        @Html.DisplayFor(m => netprice)
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Currency)
                </td>
                <td>
                    @if (item.NetPrice != null)
                    {
                        var netprice = Convert.ToDecimal(item.NetPrice.Value).ToString("#,##0.00");
                        @Html.DisplayFor(m => netprice)
                    }
                </td>
                <td>
                    @if (item.Status == "H")
                    {
                        @Html.Raw("<span class='statusSpan'>Hold</span>");
                    }
                    else if (item.Status == "A")
                    {
                        @Html.Raw("<span class='statusSpan'>Approved</span>");
                    }
                    else if (item.Status == "E")
                    {
                        @Html.Raw("<span class='statusSpan'>Error</span>");
                    }
                    else if (item.Status == "R")
                    {
                        @Html.Raw("<span class='statusSpan'>Rejected</span>");
                    }
                    else if (item.Status == "M")
                    {
                        @Html.Raw("<span class='statusSpan'>Merged</span>");
                    }
                    else if (item.Status == "D")
                    {
                        @Html.Raw("<span class='statusSpan'>Deleted</span>");
                    }
                    else if (item.Status == "P")
                    {
                        @Html.Raw("<span class='statusSpan'>Pending</span>");
                    }
                    else if (item.Status == "I")
                    {
                        @Html.Raw("<span class='statusSpan'>PO Issued</span>");
                    }
                    else if (item.Status == "N")
                    {
                        @Html.Raw("<span class='statusSpan'>New</span>");
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VendorCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VendorName)
                    @if (Convert.ToBoolean(item.IsMultipleVendor))
                    {
                        @Html.ActionLink(" & more ...", "RouteDocNo", new { docId = @item.DocID, docNo = @item.DocNo, type = @item.DocType }, new { title = @item.VendorNameList })
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VendorCategory)
                </td>
                <td>
                    @if (item.AttachDoc != null)
                    {
                        @Html.ActionLink(item.AttachDoc, "GetDocument", new { Controller = "BrowseDocument", docNo = @item.DocNo, name = @item.AttachDoc, erpattach = @item.ERPAttachment }, new { target = "_blank" })
                    }
                </td>
                <td>
                    @if (item.AddAttachDoc1 != null)
                    {
                        @Html.ActionLink(item.AddAttachDoc1, "GetDocument", new { docNo = @item.DocNo, name = @item.AddAttachDoc1, erpattach = @item.ERPAttachment }, new { target = "_blank" })
                    }
                </td>
                <td>
                    @if (item.AddAttachDoc2 != null)
                    {
                        @Html.ActionLink(item.AddAttachDoc2, "GetDocument", new { docNo = @item.DocNo, name = @item.AddAttachDoc2, erpattach = @item.ERPAttachment }, new { target = "_blank" })
                    }
                </td>
                <td>
                    @if (item.AddAttachDoc3 != null)
                    {
                        @Html.ActionLink(item.AddAttachDoc3, "GetDocument", new { docNo = @item.DocNo, name = @item.AddAttachDoc3, erpattach = @item.ERPAttachment }, new { target = "_blank" })
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SubmitBy)
                </td>
                <td>
                    @if (item.SubmitDate != null)
                    {
                        var dateVal = item.SubmitDate.Value.ToString("dd/MM/yyyy HH:mm:ss");
                        @Html.DisplayFor(m => dateVal)
                    }
                </td>
            </tr>
        }
    </table>

                {
                    double TotalPage = Convert.ToDouble(@ViewBag.TotalPages);


                    <ul class="pagination">
                        @for (int i = 1; i <= TotalPage; i++)
                        {
                            if (Convert.ToString(i) == ViewBag.Page)
                            {
                                <li class="active"> @Html.ActionLink(i.ToString() + " ", "Index", new { Page = i, SearchText = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["SearchText"])), Pagesize = Convert.ToString(ViewData["Pagesize"]) })</li>
                            }
                            else
                            {
                                <li> @Html.ActionLink(i.ToString() + " ", "Index", new { Page = i, SearchText = clsGeneral.searchStringEncrypt(Convert.ToString(ViewData["SearchText"])), Pagesize = Convert.ToString(ViewData["Pagesize"]) }) </li>
                            }
                        }
                    </ul>
                    }

                }
