//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BLL.MailService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MailContract", Namespace="http://schemas.datacontract.org/2004/07/DocIdMailService")]
    [System.SerializableAttribute()]
    public partial class MailContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReqTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkflowIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocId {
            get {
                return this.DocIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DocIdField, value) != true)) {
                    this.DocIdField = value;
                    this.RaisePropertyChanged("DocId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReqType {
            get {
                return this.ReqTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ReqTypeField, value) != true)) {
                    this.ReqTypeField = value;
                    this.RaisePropertyChanged("ReqType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkflowId {
            get {
                return this.WorkflowIdField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkflowIdField, value) != true)) {
                    this.WorkflowIdField = value;
                    this.RaisePropertyChanged("WorkflowId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PoMailInfoContract", Namespace="http://schemas.datacontract.org/2004/07/DocIdMailService")]
    [System.SerializableAttribute()]
    public partial class PoMailInfoContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] AttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BuyerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string POManageremailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ToListAddressField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Attachments {
            get {
                return this.AttachmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentsField, value) != true)) {
                    this.AttachmentsField = value;
                    this.RaisePropertyChanged("Attachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuyerName {
            get {
                return this.BuyerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BuyerNameField, value) != true)) {
                    this.BuyerNameField = value;
                    this.RaisePropertyChanged("BuyerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocId {
            get {
                return this.DocIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DocIdField, value) != true)) {
                    this.DocIdField = value;
                    this.RaisePropertyChanged("DocId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsException {
            get {
                return this.IsExceptionField;
            }
            set {
                if ((this.IsExceptionField.Equals(value) != true)) {
                    this.IsExceptionField = value;
                    this.RaisePropertyChanged("IsException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string POManageremailID {
            get {
                return this.POManageremailIDField;
            }
            set {
                if ((object.ReferenceEquals(this.POManageremailIDField, value) != true)) {
                    this.POManageremailIDField = value;
                    this.RaisePropertyChanged("POManageremailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PoNumber {
            get {
                return this.PoNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PoNumberField, value) != true)) {
                    this.PoNumberField = value;
                    this.RaisePropertyChanged("PoNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ToListAddress {
            get {
                return this.ToListAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ToListAddressField, value) != true)) {
                    this.ToListAddressField = value;
                    this.RaisePropertyChanged("ToListAddress");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MailResult", Namespace="http://schemas.datacontract.org/2004/07/DocIdMailService")]
    [System.SerializableAttribute()]
    public partial class MailResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool statusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MailService.IMailService")]
    public interface IMailService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailService/SendMail", ReplyAction="http://tempuri.org/IMailService/SendMailResponse")]
        void SendMail(BLL.MailService.MailContract mailContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailService/SendMail", ReplyAction="http://tempuri.org/IMailService/SendMailResponse")]
        System.Threading.Tasks.Task SendMailAsync(BLL.MailService.MailContract mailContract);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailService/SendAlternative", ReplyAction="http://tempuri.org/IMailService/SendAlternativeResponse")]
        void SendAlternative(System.DateTime dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailService/SendAlternative", ReplyAction="http://tempuri.org/IMailService/SendAlternativeResponse")]
        System.Threading.Tasks.Task SendAlternativeAsync(System.DateTime dt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailService/SendPoMail", ReplyAction="http://tempuri.org/IMailService/SendPoMailResponse")]
        bool SendPoMail(BLL.MailService.PoMailInfoContract mailInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailService/SendPoMail", ReplyAction="http://tempuri.org/IMailService/SendPoMailResponse")]
        System.Threading.Tasks.Task<bool> SendPoMailAsync(BLL.MailService.PoMailInfoContract mailInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailService/sendEmail", ReplyAction="http://tempuri.org/IMailService/sendEmailResponse")]
        BLL.MailService.MailResult sendEmail(string[] to, string[] cc, string subject, string body, string[] attachmentList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailService/sendEmail", ReplyAction="http://tempuri.org/IMailService/sendEmailResponse")]
        System.Threading.Tasks.Task<BLL.MailService.MailResult> sendEmailAsync(string[] to, string[] cc, string subject, string body, string[] attachmentList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailService/SendInvoiceIssueMail", ReplyAction="http://tempuri.org/IMailService/SendInvoiceIssueMailResponse")]
        BLL.MailService.MailResult SendInvoiceIssueMail(int notificationID, string invoiceList, string issuedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMailService/SendInvoiceIssueMail", ReplyAction="http://tempuri.org/IMailService/SendInvoiceIssueMailResponse")]
        System.Threading.Tasks.Task<BLL.MailService.MailResult> SendInvoiceIssueMailAsync(int notificationID, string invoiceList, string issuedBy);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMailServiceChannel : BLL.MailService.IMailService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MailServiceClient : System.ServiceModel.ClientBase<BLL.MailService.IMailService>, BLL.MailService.IMailService {
        
        public MailServiceClient() {
        }
        
        public MailServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MailServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MailServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MailServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SendMail(BLL.MailService.MailContract mailContract) {
            base.Channel.SendMail(mailContract);
        }
        
        public System.Threading.Tasks.Task SendMailAsync(BLL.MailService.MailContract mailContract) {
            return base.Channel.SendMailAsync(mailContract);
        }
        
        public void SendAlternative(System.DateTime dt) {
            base.Channel.SendAlternative(dt);
        }
        
        public System.Threading.Tasks.Task SendAlternativeAsync(System.DateTime dt) {
            return base.Channel.SendAlternativeAsync(dt);
        }
        
        public bool SendPoMail(BLL.MailService.PoMailInfoContract mailInfo) {
            return base.Channel.SendPoMail(mailInfo);
        }
        
        public System.Threading.Tasks.Task<bool> SendPoMailAsync(BLL.MailService.PoMailInfoContract mailInfo) {
            return base.Channel.SendPoMailAsync(mailInfo);
        }
        
        public BLL.MailService.MailResult sendEmail(string[] to, string[] cc, string subject, string body, string[] attachmentList) {
            return base.Channel.sendEmail(to, cc, subject, body, attachmentList);
        }
        
        public System.Threading.Tasks.Task<BLL.MailService.MailResult> sendEmailAsync(string[] to, string[] cc, string subject, string body, string[] attachmentList) {
            return base.Channel.sendEmailAsync(to, cc, subject, body, attachmentList);
        }
        
        public BLL.MailService.MailResult SendInvoiceIssueMail(int notificationID, string invoiceList, string issuedBy) {
            return base.Channel.SendInvoiceIssueMail(notificationID, invoiceList, issuedBy);
        }
        
        public System.Threading.Tasks.Task<BLL.MailService.MailResult> SendInvoiceIssueMailAsync(int notificationID, string invoiceList, string issuedBy) {
            return base.Channel.SendInvoiceIssueMailAsync(notificationID, invoiceList, issuedBy);
        }
    }
}
